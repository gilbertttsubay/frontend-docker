name: Npm Run docker

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Save Docker image as artifact
      uses: actions/upload-artifact@v2
      with:
        name: docker-image
        path: . 

    
    # - name: setup docker
    #   run: |
    #     # Instal Docker
    #     sudo apt-get update
    #     sudo apt-get install -y docker.io

    #     # Jalankan Docker
    #     sudo systemctl start docker
    #     sudo systemctl enable docker

    #     # Periksa versi Docker
    #     docker --version
    - name: Menjalankan perintah build docker
      run: |
        docker build -t gilbertsubay/docker-react -f Dockerfile.dev .
    
    - name: Docker run
      run: |
        docker run -e CI=true gilbertsubay/docker-react npm run test
    
  deploy:
    runs-on: ubuntu-latest

    needs: build


    steps:
    - name: Checkout code
      uses: actions/checkout@v2
   
    - name: Download Docker image artifact
      uses: actions/download-artifact@v2
      with:
        name: docker-image  # Nama artifact yang disimpan di job A

    - name: Load Docker image
      run: docker load -i docker-image.tar 
    - name: Log in to AWS ECR
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}
        aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com

    - name: Docker image list
      run: |
        docker images
    - name: Tag Docker image
      run: docker tag gilbertsubay/docker-react ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/your-repo-name:latest
    
    - name: Deploy to Elastic Beanstalk
      run: |
        eb init -r ${{ secrets.AWS_DEFAULT_REGION }} -p docker your-app-name
        eb deploy your-env-name --staged